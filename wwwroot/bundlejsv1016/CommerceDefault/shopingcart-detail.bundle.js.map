{"version":3,"sources":["quantity-up-down.js","shoppingcart-detail.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shopingcart-detail.bundle.js","sourcesContent":["/* * * * * * * * * * * * * * * * *\r\n * Pagination\r\n * javascript page navigation\r\n * * * * * * * * * * * * * * * * */\r\n\r\nfunction Quantity() {\r\n    // converting initialize data\r\n    this.Extend = function (downElement, upElement, targetElement, valueChangeCallBack) {\r\n        this.DownElement = downElement;\r\n        this.UpElement = upElement;\r\n        this.TargetElement = targetElement;\r\n        this.ValueChangeCallBack = valueChangeCallBack || function() {console.log(\"ValueChange don't have callback\")};\r\n        this.Process();\r\n    };\r\n\r\n    this.Process = function () {\r\n        var self = this;\r\n        this.UpElement.addEventListener(\"click\", function(eve) {\r\n            if (+self.TargetElement.value < +self.TargetElement.max) {\r\n                self.TargetElement.value = ++self.TargetElement.value;\r\n\r\n                if (!!self.ValueChangeCallBack) {\r\n                    self.ValueChangeCallBack();\r\n                }\r\n            }\r\n        });\r\n        this.DownElement.addEventListener(\"click\", function (eve) {\r\n            if (+self.TargetElement.value > +self.TargetElement.min) {\r\n                self.TargetElement.value = --self.TargetElement.value;\r\n\r\n                if (!!self.ValueChangeCallBack) {\r\n                    self.ValueChangeCallBack();\r\n                }\r\n            }\r\n        });\r\n        this.TargetElement.addEventListener(\"keyup\", function (eve) {\r\n            if (+self.TargetElement.value > +self.TargetElement.max) {\r\n                self.TargetElement.value = +self.TargetElement.max;\r\n            }\r\n            else if (+self.TargetElement.value < +self.TargetElement.min) {\r\n                self.TargetElement.value = +self.TargetElement.min;\r\n            }\r\n\r\n            if (!!self.ValueChangeCallBack) {\r\n                self.ValueChangeCallBack();\r\n            }\r\n        });\r\n\r\n        this.TargetElement.addEventListener(\"change\", function (eve) {\r\n            if (!!self.ValueChangeCallBack) {\r\n                self.ValueChangeCallBack();\r\n            }\r\n        });\r\n\r\n      \r\n    };\r\n\r\n    // init\r\n    this.Init = function (containerElement, valueChangeCallBack) {\r\n        var downElement = containerElement.querySelector(\"[data-minus]\");\r\n        var upElement = containerElement.querySelector(\"[data-plus]\");\r\n        var targetElement = containerElement.querySelector(\"input[type='number']\");\r\n        this.Extend(downElement, upElement, targetElement, valueChangeCallBack);\r\n    }\r\n};\r\n\r\n","\"use strict\";\r\nvar listQuantities, summaryElement, btnReloadShopingCartTable, btnRemoveRows, btnUpdateQuantity;\r\ndocument.addEventListener(\"DOMContentLoaded\",\r\n    function () {\r\n        init();\r\n        btnReloadShopingCartTable.click();\r\n        //for (var j = 0; j < btnRemoveRows.length; j++) {\r\n        //    btnRemoveRows[j].addEventListener(\"click\", function(eve) {\r\n           \r\n        //    });\r\n        //}\r\n        \r\n\r\n    });\r\n\r\nfunction processListItemShopingCartTable() {\r\n    listQuantities = document.querySelectorAll(\"._quantity\");\r\n\r\n    for (var i = 0; i < listQuantities.length; i++) {\r\n        var quantity = new Quantity();\r\n        quantity.Init(listQuantities[i], reloadCartMoney);\r\n    }\r\n\r\n}\r\n\r\nfunction init() {\r\n    summaryElement = document.querySelector(\"[data-summary]\");  \r\n    btnReloadShopingCartTable = document.querySelector(\"#frmLazyLoadShopingCartTable #btnReloadShopingCartTable\");\r\n    btnUpdateQuantity = document.getElementById(\"btnUpdateQuantity\");\r\n}\r\n\r\nfunction removeCartItemComplete() {\r\n    btnReloadShopingCartTable.click();\r\n}\r\n\r\n\r\nfunction reloadCartMoney() {\r\n    const rowItems = document.querySelectorAll(\"[data-class-id]\");\r\n    var summaryMoney = 0;\r\n\r\n    for (let i = 0; i < rowItems.length; i++) {\r\n\r\n        var quantytyElement = rowItems[i].querySelector(\"._quantity\");\r\n        const quantity = +rowItems[i].querySelector(\"[data-quantity]\").value;\r\n        var priceUnit = getUnitPrice(JSON.parse(quantytyElement.dataset.price), quantity);\r\n\r\n        const unitPriceElement = rowItems[i].querySelector(\"[data-unit-price]\");\r\n        unitPriceElement.innerHTML = WNumbHelper.GetFrNumber(priceUnit);\r\n\r\n        const itemPrice = rowItems[i].querySelector(\"[data-item-price]\");\r\n        const itemMoney = priceUnit * quantity;\r\n        summaryMoney += itemMoney;\r\n        itemPrice.innerHTML = WNumbHelper.GetFrNumber(itemMoney);\r\n    }\r\n\r\n    const summaryItem = document.querySelector(\"[data-summary]\");\r\n    summaryItem.innerHTML = WNumbHelper.GetFrNumber(summaryMoney);\r\n    btnUpdateQuantity.click();\r\n}\r\n\r\nfunction getUnitPrice(lsitPrices, quantity) {\r\n   \r\n    var priceUnit = lsitPrices[lsitPrices.length-1].money;\r\n\r\n    for (let j = lsitPrices.length - 1; j >= 0; j--) {\r\n\r\n        if (lsitPrices[j].quantity !== 0 && quantity >= lsitPrices[j].quantity) {\r\n            break;\r\n        }\r\n\r\n        priceUnit = lsitPrices[j].money;\r\n    }\r\n\r\n    return priceUnit;\r\n}\r\n"]}