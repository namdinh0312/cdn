"use strict";function isClientFocused(){return clients.matchAll({type:"window",includeUncontrolled:!0}).then(function(t){for(var n=!1,i=0;i<t.length;i++){if(t[i].focused){n=!0;break}}return n})}function sendMessageToPage(t,n){var i=isClientFocused().then(function(t){if(!t)return self.registration.showNotification("No focused windows",{body:"Had to show a notification instead of messaging each page."});windowClients.forEach(function(t){t.postMessage({message:n,time:(new Date).toString()})})});t.waitUntil(i)}function showNotification(i,e){var t=isClientFocused().then(function(t){if(t){var n=clients.matchAll({type:"window",includeUncontrolled:!0}).then(function(t){for(var n=0;n<t.length;n++)t[n].postMessage({message:e.body,time:(new Date).toString()})});i.waitUntil(n)}return e.data={},e.data.targetUrl=e.ClickTargetPath,e.data.notifyCloseNotify=e.NotifyCloseNotify,self.registration.showNotification(e.title,e)});i.waitUntil(t)}self.addEventListener("push",function(t){showNotification(t,JSON.parse(t.data.text()))}),self.addEventListener("notificationclick",function(t,n){switch(t.notification.close(),t.notification.tag){case"open-window":openWindow(t);break;case"focus-window":focusWindow(t);break;case"data-notification":dataNotification(t)}});var notificationCloseAnalytics=function(t){return fetch(t.notifyCloseNotify),Promise.resolve()};function focusWindow(t){var o=t.notification.data.targetUrl,n=clients.matchAll({type:"window",includeUncontrolled:!0}).then(function(t){for(var n=null,i=0;i<t.length;i++){var e=t[i];if(e.url===o){n=e;break}}return n?n.focus():clients.openWindow(o)});t.waitUntil(n)}function dataNotification(t){var n=t.notification.data;console.log(""),console.log("The data notification had the following parameters:"),Object.keys(n).forEach(function(t){console.log("  ".concat(t,": ").concat(n[t]))}),console.log("")}function openWindow(t){var n=clients.openWindow("/demos/notification-examples/example-page.html");t.waitUntil(n)}self.addEventListener("notificationclose",function(t){var n=notificationCloseAnalytics(t.notification.data);t.waitUntil(n)}),importScripts("/js/service-workers/polyfill-cache.js"),self.addEventListener("install",function(t){t.waitUntil(caches.open("airhorner").then(function(t){return t.addAll(["/"])}))}),self.addEventListener("fetch",function(i){i.respondWith(caches.open("airhorner").then(function(n){return n.match(i.request).then(function(t){return console.log(i.request),t||fetch(i.request).then(function(t){return n.put(i.request,t.clone()),t})})}))});
//# sourceMappingURL=push-service-worker.min.js.map
