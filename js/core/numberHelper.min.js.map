{"version":3,"sources":["wwwroot/js/core/numberHelper.js"],"names":["Number","prototype","ToMoney","money","subfix","number","this","Math","round","ToFrDouble","replace","ToDouble","NumberHelper","Extend","data","Init"],"mappings":"AAAA,aAEAA,OAAOC,UAAUC,QAAU,WACzB,IAMIC,EACAC,EAPAC,EAASC,KAEb,GAA2B,IAAvBC,KAAKC,MAAMH,GACb,MAAO,MAMT,GAAa,IAATA,EACFF,EAAQE,EAAS,IACjBD,EAAS,UACJ,GAAa,IAATC,EACTF,EAAQE,EAAS,IACjBD,EAAS,QACJ,CAAA,KAAa,IAATC,GAIT,MAAO,MAHPF,EAAQE,EAAS,IACjBD,EAAS,IAKX,MAAO,IAAMG,KAAKC,MAAc,IAARL,GAAe,IAAM,IAAMC,GAGrDJ,OAAOC,UAAUQ,WAAa,WAE5B,OAAQ,GADKH,MACQI,QAAQ,IAAK,MAGpCV,OAAOC,UAAUU,SAAW,WAE1B,OAAQ,GADKL,MACQI,QAAQ,IAAK,MAGpC,IAAIE,aAAe,CAEjBC,OAAQ,SAAgBC,KAExBL,WAAY,SAAoBJ,GAC9B,OAAQ,GAAKA,GAAQK,QAAQ,IAAK,MAEpCC,SAAU,SAAkBN,GAC1B,QAAS,GAAKA,GAAQK,QAAQ,IAAK,MAGrCK,KAAM,SAAcD,GAClBF,aAAaC,OAAOC","file":"numberHelper.min.js","sourcesContent":["\"use strict\";\n\nNumber.prototype.ToMoney = function () {\n  var number = this;\n\n  if (Math.round(number) === 0) {\n    return \"$--\";\n  }\n\n  var money;\n  var subfix;\n\n  if (number > 1000000000) {\n    money = number / 1000000000;\n    subfix = \"tá»·\";\n  } else if (number > 1000000) {\n    money = number / 1000000;\n    subfix = \"T\";\n  } else if (number > 1000) {\n    money = number / 1000;\n    subfix = \"K\";\n  } else {\n    return \"$--\";\n  }\n\n  return \"$\" + Math.round(money * 100) / 100 + \" \" + subfix;\n};\n\nNumber.prototype.ToFrDouble = function () {\n  var number = this;\n  return (\"\" + number).replace(\".\", \",\");\n};\n\nNumber.prototype.ToDouble = function () {\n  var number = this;\n  return (\"\" + number).replace(\",\", \".\");\n};\n\nvar NumberHelper = {\n  // converting initialize data\n  Extend: function Extend(data) {},\n  // find pagination type\n  ToFrDouble: function ToFrDouble(number) {\n    return (\"\" + number).replace(\".\", \",\");\n  },\n  ToDouble: function ToDouble(number) {\n    return +(\"\" + number).replace(\",\", \".\");\n  },\n  // init can't call new google.maps.xxx in this function\n  Init: function Init(data) {\n    NumberHelper.Extend(data);\n  }\n};\n/* * * * * * * * * * * * * * * * *\r\n* Initialization\r\n* * * * * * * * * * * * * * * * */"]}