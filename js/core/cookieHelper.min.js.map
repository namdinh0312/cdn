{"version":3,"sources":["wwwroot/js/core/cookieHelper.js"],"names":["CookieHelper","_Save","cookieHelperEnum","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","encodeURIComponent","_Get","name","ca","split","i","length","c","charAt","substring","indexOf","decodeURIComponent","_Check","LogCategory","categoryId","isView","isAddToCart","isPay","isComplete","listComplexCategory","CookieNamesEnum","UserCategoryList","existCategory","JSON","parse","find","x","CategoryId","ViewCount","AddToCartCount","InOrderCount","CompleteCount","push","stringify","Init","addEventListener"],"mappings":"AAAA,aAMA,IAAIA,aAAe,CAKjBC,MAAO,SAAeC,EAAkBC,EAAQC,GAC9C,IAAIC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAqB,GAATJ,EAAc,GAAK,GAAK,KAChD,IAAIK,EAAU,WAAaJ,EAAEK,cAC7BC,SAASC,OAASV,EAAmB,IAAMW,mBAAmBV,GAAU,IAAMM,EAAU,WAE1FK,KAAM,SAAcZ,GAKlB,IAJA,IAAIa,EAAOb,EAAmB,IAE1Bc,EAAKL,SAASC,OAAOK,MAAM,KAEtBC,EAAI,EAAGA,EAAIF,EAAGG,OAAQD,IAAK,CAGlC,IAFA,IAAIE,EAAIJ,EAAGE,GAEY,MAAhBE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAGlB,GAAwB,IAApBF,EAAEG,QAAQR,GACZ,OAAOS,mBAAmBJ,EAAEE,UAAUP,EAAKI,OAAQC,EAAED,SAIzD,MAAO,IAETM,OAAQ,SAAgBvB,GAGtB,MAAe,KAFFF,aAAac,KAAKZ,IAQjCwB,YAAa,SAAqBC,EAAYC,EAAQC,EAAaC,EAAOC,GACxE,IAAIC,EAAsBhC,aAAac,KAAKmB,gBAAgBC,kBAGxDC,GADJH,EAAuBA,EAA2BI,KAAKC,MAAML,GAAhB,IACLM,KAAK,SAAUC,GACrD,OAAOA,EAAEC,aAAeb,IAGrBQ,EAUCP,EACFO,EAAcM,WAAa,EAClBZ,EACTM,EAAcO,gBAAkB,EACvBZ,EACTK,EAAcQ,cAAgB,EACrBZ,IACTI,EAAcS,eAAiB,IAhBjCT,EAAgB,CACdK,WAAYb,EACZc,UAAWb,EAAS,EAAI,EACxBc,eAAgBb,EAAc,EAAI,EAClCc,aAAcb,EAAQ,EAAI,EAC1Bc,cAAeb,EAAa,EAAI,GAElCC,EAAoBa,KAAKV,IAa3BnC,aAAaC,MAAMgC,gBAAgBC,iBAAkBE,KAAKU,UAAUd,GAAsB,MAa5Fe,KAAM,cAEJd,gBAAkB,CACpBC,iBAAkB,gBAMpBvB,SAASqC,iBAAiB,mBAAoBhD,aAAa+C,QAAQ","file":"cookieHelper.min.js","sourcesContent":["\"use strict\";\n\n/* * * * * * * * * * * * * * * * *\r\n * SessionStorageHelper\r\n * javascript page navigation\r\n * * * * * * * * * * * * * * * * */\nvar CookieHelper = {\n  // --------------------\n  // Utility\n  // --------------------\n  // converting initialize data\n  _Save: function _Save(cookieHelperEnum, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cookieHelperEnum + \"=\" + encodeURIComponent(cvalue) + \";\" + expires + \";path=/\";\n  },\n  _Get: function _Get(cookieHelperEnum) {\n    var name = cookieHelperEnum + \"=\";\n    debugger;\n    var ca = document.cookie.split(\";\");\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) === 0) {\n        return decodeURIComponent(c.substring(name.length, c.length));\n      }\n    }\n\n    return \"\";\n  },\n  _Check: function _Check(cookieHelperEnum) {\n    var cValue = CookieHelper._Get(cookieHelperEnum);\n\n    if (cValue !== \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  LogCategory: function LogCategory(categoryId, isView, isAddToCart, isPay, isComplete) {\n    var listComplexCategory = CookieHelper._Get(CookieNamesEnum.UserCategoryList);\n\n    listComplexCategory = !listComplexCategory ? [] : JSON.parse(listComplexCategory);\n    var existCategory = listComplexCategory.find(function (x) {\n      return x.CategoryId === categoryId;\n    });\n\n    if (!existCategory) {\n      existCategory = {\n        CategoryId: categoryId,\n        ViewCount: isView ? 1 : 0,\n        AddToCartCount: isAddToCart ? 1 : 0,\n        InOrderCount: isPay ? 1 : 0,\n        CompleteCount: isComplete ? 1 : 0\n      };\n      listComplexCategory.push(existCategory);\n    } else {\n      if (isView) {\n        existCategory.ViewCount += 1;\n      } else if (isAddToCart) {\n        existCategory.AddToCartCount += 1;\n      } else if (isPay) {\n        existCategory.InOrderCount += 1;\n      } else if (isComplete) {\n        existCategory.CompleteCount += 1;\n      }\n    }\n\n    CookieHelper._Save(CookieNamesEnum.UserCategoryList, JSON.stringify(listComplexCategory), 365);\n  },\n  //RemoveCategory: function (proId) {\n  //    var listSaved = CookieHelper._Get(CookieNamesEnum.PropertySaved);\n  //    listSaved = (!listSaved) ? [] : JSON.parse(listSaved);\n  //    debugger;\n  //    listSaved.splice(0, 0, +proId);\n  //    listSaved = listSaved.GetUnique();\n  //    listSaved.length = listSaved.length < 5 ? listSaved.length : 5;\n  //    console.log(listSaved);\n  //    CookieHelper._Save(CookieNamesEnum.PropertySaved, JSON.stringify(listSaved), 7);\n  //},\n  // init\n  Init: function Init() {}\n};\nvar CookieNamesEnum = {\n  UserCategoryList: \"CategoryList\"\n};\n/* * * * * * * * * * * * * * * * *\r\n* Initialization\r\n* * * * * * * * * * * * * * * * */\n\ndocument.addEventListener('DOMContentLoaded', CookieHelper.Init(), false);"]}